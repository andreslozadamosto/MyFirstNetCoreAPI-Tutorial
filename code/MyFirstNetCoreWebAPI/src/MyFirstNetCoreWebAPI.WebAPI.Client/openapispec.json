{
  "openapi": "3.0.1",
  "info": {
    "title": "My First Net Core REST API",
    "description": "A simple example ASP.NET Core Web API by Andr√©s Lozada Mosto, You can find this tutorial here: https://dev.to/andreslozadamosto/creando-un-api-en-net-core-5-intro-2nc2",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Andres Lozada Mosto",
      "url": "https://github.com/andreslozadamosto",
      "email": ""
    },
    "license": {
      "name": "Use under MIT licence",
      "url": "https://choosealicense.com/licenses/mit/"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all the Users",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Adds a new user into the system",
        "description": "Sample request:\r\n\r\n    POST /\r\n    {\r\n        \"name\" = \"Monica\"\r\n    }",
        "requestBody": {
          "description": "User information for the new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{name}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a User",
        "description": "Sample request:\r\n\r\n    curl http://localhost/api/users/andres",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the user (is de id)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "UserDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}